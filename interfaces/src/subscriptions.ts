import { Operation } from 'fast-json-patch';

export interface UpdateOptions {
  /**
   * Used to mark an update originated from a specific operation (useful for optimistic UI).
   * This is meant to be UUID generated by the client.
   */
  readonly operationId?: string;
}

export type Version = [number, number];

export interface Versioned<T> {
  /**
   * A document is created with version [time in ns (major), 1 (minor)].
   * When a document is updated or deleted the minor version is incremented.
   */
  readonly version: Version;
  /**
   * The *current* value of a document.
   */
  readonly value: T;
}

export interface Patch {
  readonly version: Version;
  /**
   * Used to mark an update originated from a specific operation (useful for optimistic UI).
   * @see UpdateOptions
   */
  readonly operationId?: string;
  readonly ops: Operation[];
}

export type KeyedPatches = Array<[string, Patch[]]>;
